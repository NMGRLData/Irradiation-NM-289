do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 556.052928
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
executed 0.0
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 556.0
Run total estimated duration= 557.000
run duration: 0:09:17
doing event level: 2
10:07:29 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 5000893552
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-7414
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-7414
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
10:07:29 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> H2,-0.0834647677945072,H1,0.0228790512581735,AX,-0.14587565246429,L1,-0.0353123057270258,L2,-0.02...
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.08346,0.02288,-0.14588,-0.03531,-0.02119,0.00223
10:07:29 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
10:07:29 -- ******* Pre Extraction Check Passed *******
=================================================================================
10:07:29 -- stopping status monitor
stop 5071484688
Alive clients [4974511600, 4982462896]
10:07:29 -- starting status monitor
start 5071484688
Monitor already running
start extraction
do extraction
Analysis started at 10:07:29.598240
Extraction Started jan_co2.py
10:07:29 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12c9f59b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
executed 120.0
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed 0
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed 0
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 0
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetValveState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
10:07:30 -- CLOSE  VALVE-R (Jan Inlet)
---------------------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
opening name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetValveState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
Get Checksum: -1965264452
10:07:30 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open None (Jan Ion Pump) result=[(True, True)], time=0.12 sec
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
closing name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetValveState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
10:07:31 -- CLOSE  VALVE-L (Microbone to Minibone)
---------------------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetValveState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
10:07:31 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.12 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetValveState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
10:07:32 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.41 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetValveState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
10:07:32 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.41 sec
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
10:07:33 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.14 sec
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
closing name=--- desc=CO2 Laser to Felix
Invalid valve name=None, description=CO2 Laser to Felix
---------------------------------------- close None (CO2 Laser to Felix) result=[(False, False)]
action=close, ok=False, locked=[None]
Failed to close valve None CO2 Laser to Felix
Invalid valve name=None, description=CO2 Laser to Felix
action=close, ok=False, locked=[None]
Failed to close valve None CO2 Laser to Felix
Failed to close valve None CO2 Laser to Felix
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
Failed to close valve None CO2 Laser to Felix
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
Get Checksum: -1965264452
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
executed 0
executed 120.0
Post Equilibration Started jan_pump_extraction_line.py
Post Measurement Started jan_pump_ms.py
10:09:45 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
10:09:45 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
testing...
no interpolation path defined
no interpolation path defined
calculate duration
executed 0
testing...
Pumping spectrometer
no interpolation path defined
open () {'name': 'O'}
executed 4.0
opening name=O desc=---
executed 4.0
Pump after analysis
doing GOSUB
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
testing...
actuate state mode=None-script, software_lock=False
no interpolation path defined
doing actuation None-script open_channel False
executed 4.0
Pump Microbone
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Open O ===>> OK
Close R ===>> OK
GetValveState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
10:09:46 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open O () result=[(True, True)], time=0.41 sec
Get Checksum: -1965264452
GetValveState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
10:09:46 -- CLOSE  VALVE-R (Jan Inlet)
---------------------------------------- close None (Jan Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
executed 0
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
10:09:46 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from extraction to failed
----------------- stop -----------------
Extraction Finished unsuccessfully
10:09:46 -- ******* Extraction Finished unsuccessfully *******
failed execution step Extraction Failed
extraction did not complete successfully
10:09:46 -- Automated run bu-FC-J-7414 failed duration: 136.849 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
